# Build stage
FROM node:18-alpine AS build
WORKDIR /app
COPY package*.json ./
RUN npm install
COPY . .
RUN npm run build

# Production stage
FROM nginx:1.24-alpine
# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Create nginx cache directory and set permissions
RUN mkdir -p /var/cache/nginx /var/run/nginx /var/log/nginx && \
    chmod 777 /var/cache/nginx && \
    chmod 777 /var/run/nginx && \
    chmod 777 /var/log/nginx && \
    chmod 777 /var/log && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/run/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html && \
    # Make nginx config writable
    chmod 777 /etc/nginx/conf.d

# Use non-root port
ENV PORT=8080

# Modify nginx.conf to use PORT environment variable
RUN sed -i "s/80/${PORT}/g" /etc/nginx/conf.d/default.conf

USER nginx
EXPOSE ${PORT}
CMD ["nginx", "-g", "daemon off;"]
